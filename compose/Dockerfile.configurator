ARG CARDANO_CLI_VERSION="${CARDANO_CLI_VERSION:-10.8.0.0}"
ARG CARDANO_NODE_VERSION="${CARDANO_NODE_VERSION:-10.4.1}"
ARG UV_VERSION="${UV_VERSION:-0.6.11}"
# Blink Labs images are built from source on Debian Bookworm
FROM ghcr.io/blinklabs-io/cardano-cli:${CARDANO_CLI_VERSION} AS cardano-cli
FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv

FROM debian:stable-slim@sha256:377ddc2a20fe8632a49b69dcfff10fccbd5b4f0b8c2d593420a6a5e03070dfa1 AS build
USER root
# Install packages required in build stage
RUN apt update && \
    apt install -y --no-install-recommends \
        ca-certificates \
        curl \
        git \
        tar

# Copy cardano-cli from image
COPY --from=cardano-cli --chown=root:root /usr/local/bin/cardano-cli /usr/local/bin/cardano-cli
# Copy uv from image
COPY --from=uv --chown=root:root /uv /usr/local/bin/uv

# Create cardano-node source directory
RUN install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-node

# Clone testnet-generation-tool.git repository
WORKDIR /usr/local/src
RUN git clone --branch main https://github.com/cardano-foundation/testnet-generation-tool.git

# Download testnet-generation-tool dependencies
WORKDIR /usr/local/src/testnet-generation-tool
RUN uv sync

# Copy testnet.yaml specification
COPY --chown=root:root .testnet.yaml /usr/local/src/testnet-generation-tool/testnet.yaml

# Build testnet configuration files
RUN uv run python3 genesis-cli.py testnet.yaml -o /tmp/testnet -c generate

# Remove dynamic topology.json
RUN find /tmp/testnet -type f -name 'topology.json' -exec rm -f '{}' ';'

#---------------------------------------------------------------------

FROM debian:stable-slim@sha256:377ddc2a20fe8632a49b69dcfff10fccbd5b4f0b8c2d593420a6a5e03070dfa1

USER root

# Install packages required in main stage
RUN apt update && \
    apt install -y --no-install-recommends \
        tree \
        jq

# Copy pool config and key material
COPY --from=build /tmp/testnet/pools /configs
COPY --from=build /tmp/testnet/utxos /configs

#-------------------------------------------------------------------------------

COPY configurator.sh /
RUN chmod 0755 /configurator.sh

ENTRYPOINT ["/configurator.sh"]
